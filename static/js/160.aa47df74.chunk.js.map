{"version":3,"file":"static/js/160.aa47df74.chunk.js","mappings":"sKAAO,IAAMA,EAAU,kC,kKCCvB,EAAuB,qBAAvB,EAAoD,sBAApD,EAAmF,uBAAnF,EAAsH,0B,kBCQhHC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gKAYT,SAASE,IAAU,IAAD,EACvB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GACjD,GAA4BT,EAAAA,EAAAA,UAASQ,GAArC,eAAOE,EAAP,KAAeC,EAAf,KA+BA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBJ,EAAJ,CACA,IAAMK,EAAoB,mCAAG,+GAEFC,EAAAA,EAAAA,IAAA,4DACgCnB,EAAAA,EADhC,kBACiDa,IAH/C,OAEnBO,EAFmB,OAKnBC,EAAOD,EAASC,KAAKC,QAAQC,KAAI,kBAAoB,CACzDC,GADqC,EAAGA,GAExCC,MAFqC,EAAOA,MAAP,IAIvClB,EAAUc,GATe,gDAWzBK,QAAQC,IAAR,MAXyB,yDAAH,qDAc1BT,GAf8B,CAgB/B,GAAE,CAACL,KAGF,4BACE,kBAAMe,UAAWC,EAAUC,SA/BV,SAAAC,GACnBA,EAAMC,iBACNtB,EAAgB,CAAEuB,MAAOlB,GAC1B,EA4BG,WACE,kBACEmB,KAAK,SACLC,MAAOpB,EACPqB,KAAK,OACLC,SA/Ba,SAAAN,GACnB,IAAQI,EAAUJ,EAAMO,OAAhBH,MACRnB,EAAUmB,EACX,EA6BOP,UAAWC,KAEb,mBAAQO,KAAK,SAASR,UAAWC,EAAjC,uBAKDd,IACC,eAAIa,UAAWC,EAAf,SACGvB,EAAOiB,KAAI,SAAAgB,GAAK,OACf,yBACE,SAACtC,EAAD,CAAYuC,GAAE,UAAKD,EAAMf,IAAMiB,MAAO,CAAEC,KAAM/B,GAA9C,SACG4B,EAAMd,SAFFc,EAAMf,GADA,QAW1B,CC5ED,MARA,WACE,OACE,2BACE,SAACpB,EAAD,KAGL,C","sources":["constants/API_KEY.js","webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","pages/Movies.jsx"],"sourcesContent":["export const API_KEY = '2954afe7c35181c36bf30aa4bc9ce527';\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Search_form__KGT+E\",\"input\":\"Search_input__PXR0c\",\"button\":\"Search_button__eG3f0\",\"movieList\":\"Search_movieList__Rr3Hv\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport css from './Search.module.css';\nimport { API_KEY } from 'constants/API_KEY';\n\nconst StyledLink = styled(Link)`\n  color: darkblue;\n\n  font-size: 20px;\n  font-weight: 500;\n\n  :hover {\n    color: orangered;\n  }\n  transition-duration: 250ms;\n`;\n\nexport function Search() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query') ?? '';\n  const [search, setSearch] = useState(searchQuery);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: search });\n  };\n\n  const handleChange = event => {\n    const { value } = event.target;\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n    const fetchMoviesByKeyword = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n        );\n        const data = response.data.results.map(({ id, title }) => ({\n          id,\n          title,\n        }));\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMoviesByKeyword();\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          name=\"search\"\n          value={search}\n          type=\"text\"\n          onChange={handleChange}\n          className={css.input}\n        />\n        <button type=\"submit\" className={css.button}>\n          Search\n        </button>\n      </form>\n\n      {search && (\n        <ul className={css.movieList}>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <StyledLink to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import { Search } from 'components/Search/Search';\n\nfunction Movies() {\n  return (\n    <main>\n      <Search />\n    </main>\n  );\n}\n\nexport default Movies;\n"],"names":["API_KEY","StyledLink","styled","Link","Search","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","search","setSearch","useEffect","fetchMoviesByKeyword","axios","response","data","results","map","id","title","console","log","className","css","onSubmit","event","preventDefault","query","name","value","type","onChange","target","movie","to","state","from"],"sourceRoot":""}